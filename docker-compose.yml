version: '3'

services:

  webserver:
    container_name: webserver
    image: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./api:/var/www/html/backend
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      - app-network
    links:
      - frontend
    depends_on:
      - app
      - db
      - redis
      - supervisor

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ./api:/var/www/html/backend
    networks:
      - app-network

  supervisor:
    build:
      context: .
      dockerfile: ./docker/supervisor/Dockerfile
    container_name: supervisor
    volumes:
      - ./api:/var/www/html/backend
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./docker/supervisor/logs:/var/log
    depends_on:
      - app
      - db
      - redis
    networks:
      - app-network
    
  db:
    image: 'mysql:8.0'
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
    networks:
      - app-network
    volumes:
      - 'database:/var/lib/mysql'

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/nuxt/Dockerfile
    volumes:
      - ./frontend:/var/www/html/frontend
    ports:
      - "3000:3000"
    depends_on:
      - app
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - 'redis:/var/lib/redis'

networks:
  app-network:
    driver: bridge

volumes:
  database:
    driver: local
  redis:
    driver: local